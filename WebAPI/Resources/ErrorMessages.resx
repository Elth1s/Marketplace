<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Category was not found</value>
  </data>
  <data name="CharacteristicGroupNotFound" xml:space="preserve">
    <value>Characteristic group was not found</value>
  </data>
  <data name="CharacteristicNameNotFound" xml:space="preserve">
    <value>Characteristic name was not found</value>
  </data>
  <data name="ExternalLoginAddFail" xml:space="preserve">
    <value>Failed to add external login</value>
  </data>
  <data name="InvalidExternalLoginRequest" xml:space="preserve">
    <value>Invalid external login request</value>
  </data>
  <data name="CaptchaVerificationFailed" xml:space="preserve">
    <value>You have not passed the captcha verification</value>
  </data>
  <data name="CityNotFound" xml:space="preserve">
    <value>City was not found</value>
  </data>
  <data name="CountryNotFound" xml:space="preserve">
    <value>County was not found</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid refresh token</value>
  </data>
  <data name="InvalidUserData" xml:space="preserve">
    <value>User with entered data not found</value>
  </data>
  <data name="ShopNotFound" xml:space="preserve">
    <value>Shop was not found</value>
  </data>
  <data name="TokenRevorked" xml:space="preserve">
    <value>Token already revoked</value>
  </data>
  <data name="UserCreateFail" xml:space="preserve">
    <value>User creation failed</value>
  </data>
  <data name="UsernameAlreadyExists" xml:space="preserve">
    <value>User with this user name already exist</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User was not found</value>
  </data>
  <data name="FilterGroupNotFound" xml:space="preserve">
    <value>Filter group was not found</value>
  </data>
  <data name="FilterNameNotFound" xml:space="preserve">
    <value>Filter name was not found</value>
  </data>
  <data name="ProductStatusNotFound" xml:space="preserve">
    <value>Product Status was not found</value>
  </data>
  <data name="ProductNotFound" xml:space="preserve">
    <value>Product was not found</value>
  </data>
  <data name="ProductCharacteristicNotFound" xml:space="preserve">
    <value>Product Characteristic was not found</value>
  </data>
  <data name="ProductImageNotFound" xml:space="preserve">
    <value>Product Image was not found</value>
  </data>
  <data name="UserAddRoleFail" xml:space="preserve">
    <value>Failed to add seller role</value>
  </data>
  <data name="AlreadyComfirmEmail" xml:space="preserve">
    <value>Your email address has already been confirmed</value>
  </data>
  <data name="EmailSendingFailed" xml:space="preserve">
    <value>Sending email failed</value>
  </data>
  <data name="InvalidConfirmToken" xml:space="preserve">
    <value>Invalid confirmation token</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid password</value>
  </data>
  <data name="InvalidResetPasswordToken" xml:space="preserve">
    <value>Invalid password reset token</value>
  </data>
  <data name="PasswordUpdateFail" xml:space="preserve">
    <value>Updating password failed</value>
  </data>
  <data name="FilterValueNotFound" xml:space="preserve">
    <value>Filter value was not found</value>
  </data>
  <data name="UnitNotFound" xml:space="preserve">
    <value>Unit was not found</value>
  </data>
  <data name="FilterNameUnitNotUnique" xml:space="preserve">
    <value>Filter name with this unit measure already exists</value>
  </data>
  <data name="CityCountryNotUnique" xml:space="preserve">
    <value>City with this country already exists</value>
  </data>
  <data name="CharacteristicValueNotFound" xml:space="preserve">
    <value>Characteristic value was not found</value>
  </data>
  <data name="AlreadyComfirmPhone" xml:space="preserve">
    <value>Your phone number has already been confirmed</value>
  </data>
  <data name="BasketItemNotFound" xml:space="preserve">
    <value>Basket item not found</value>
  </data>
  <data name="PasswordExist" xml:space="preserve">
    <value>Password is already exist</value>
  </data>
  <data name="AddPasswordFailed" xml:space="preserve">
    <value>Adding password failed</value>
  </data>
  <data name="CountryWithCodeExist" xml:space="preserve">
    <value>Country with this code already exist</value>
  </data>
  <data name="CountryWithNameExist" xml:space="preserve">
    <value>Country with this name already exist</value>
  </data>
  <data name="CategoryNameNotUnique" xml:space="preserve">
    <value>Category with this name already exist</value>
  </data>
  <data name="CategoryUrlSlugNotUnique" xml:space="preserve">
    <value>Category with this url slug already exist</value>
  </data>
  <data name="OrderNotFound" xml:space="preserve">
    <value>Order not found</value>
  </data>
  <data name="OrderStatusNotFound" xml:space="preserve">
    <value>Order status not found</value>
  </data>
  <data name="ReviewImageNotFound" xml:space="preserve">
    <value>Review image not found</value>
  </data>
  <data name="ReviewNotFound" xml:space="preserve">
    <value>Review not found</value>
  </data>
  <data name="InvalidUserEmail" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="ReviewOrder" xml:space="preserve">
    <value>You need order product to write review</value>
  </data>
  <data name="ReviewReplyNotFound" xml:space="preserve">
    <value>Review reply not found</value>
  </data>
  <data name="QuestionNotFound" xml:space="preserve">
    <value>Question not found</value>
  </data>
  <data name="QuestionImageNotFound" xml:space="preserve">
    <value>Question image not found</value>
  </data>
  <data name="DontHavePermition" xml:space="preserve">
    <value>Don't have permition</value>
  </data>
  <data name="CharacteristicGroupExist" xml:space="preserve">
    <value>Characteristic group with name already exist</value>
  </data>
  <data name="CharacteristicNameExist" xml:space="preserve">
    <value>Characteristic name with this group and unit already exist</value>
  </data>
  <data name="CharacteristicValueExist" xml:space="preserve">
    <value>Characteristic value with this name already exist</value>
  </data>
</root>